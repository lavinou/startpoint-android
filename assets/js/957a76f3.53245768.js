"use strict";(self.webpackChunkwebdoc=self.webpackChunkwebdoc||[]).push([[5655],{101:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"plugins/spauth-plugin/setup","title":"Setup","description":"This guide walks you through the process of setting up the SPAuth Plugin in your StartPoint project. By the end of this tutorial, you will have SPAuth integrated and ready to manage user authentication.","source":"@site/docs/plugins/spauth-plugin/setup.md","sourceDirName":"plugins/spauth-plugin","slug":"/plugins/spauth-plugin/setup","permalink":"/startpoint-android/docs/plugins/spauth-plugin/setup","draft":false,"unlisted":false,"editUrl":"https://github.com/lavinou/startpoint-android/tree/main/docs/docs/plugins/spauth-plugin/setup.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Setup","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Overview","permalink":"/startpoint-android/docs/plugins/spauth-plugin/overview"},"next":{"title":"Providers","permalink":"/startpoint-android/docs/category/providers"}}');var s=t(4848),r=t(8453);const o={title:"Setup",sidebar_position:2},a="SPAuth Plugin - Setup",u={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Configuring User Sessions",id:"configuring-user-sessions",level:3},{value:"Testing the Setup",id:"testing-the-setup",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"spauth-plugin---setup",children:"SPAuth Plugin - Setup"})}),"\n",(0,s.jsx)(n.p,{children:"This guide walks you through the process of setting up the SPAuth Plugin in your StartPoint project. By the end of this tutorial, you will have SPAuth integrated and ready to manage user authentication."}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"A working StartPoint project."}),"\n",(0,s.jsx)(n.li,{children:"Basic understanding of Kotlin and coroutine flows."}),"\n",(0,s.jsx)(n.li,{children:"Access to your preferred authentication backend or provider."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.p,{children:"To begin, add the SPAuth dependency to your project:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:'implementation("com.github.lavinou.startpoint-android:auth")\n'})}),"\n",(0,s.jsx)(n.p,{children:"Ensure you sync the project after adding the dependency."}),"\n",(0,s.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["Install SPAuth using the ",(0,s.jsx)(n.code,{children:"rememberStartPoint"})," block, where you can configure core authentication settings directly:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:'val startPoint = rememberStartPoint {\n    install(SPAuth) {\n        title = "Welcome"\n        signInButtonRoute = "/login"\n        signUpButtonRoute = "/register"\n        image = R.drawable.auth_image\n\n        val userSessionBackend = CustomUserSessionBackend()\n        setUserSessionBackend(userSessionBackend)\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"configuring-user-sessions",children:"Configuring User Sessions"}),"\n",(0,s.jsxs)(n.p,{children:["To manage user sessions, implement the ",(0,s.jsx)(n.code,{children:"SPUserSessionBackend"})," interface. This allows you to define how user data is retrieved and managed during authentication."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:'class CustomUserSessionBackend : SPUserSessionBackend<MyAuthUser> {\n    override suspend fun logout(token: SPAuthToken): Boolean {\n        // Perform logout logic\n        return true\n    }\n\n    override suspend fun user(token: SPAuthToken?): MyAuthUser {\n        // Fetch user data based on token\n        return MyAuthUser("user123", "example@example.com")\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"testing-the-setup",children:"Testing the Setup"}),"\n",(0,s.jsx)(n.p,{children:"To verify the setup, trigger an authentication request using the SPAuth instance:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:'val credential = Credential("email", "password123")\nval token = startPoint.plugin(SPAuth).authenticate(credential)\nprintln("User authenticated with token: ${token.accessToken}")\n'})}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Customize user session handling by overriding ",(0,s.jsx)(n.code,{children:"SPAuthUserSession"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Implement additional backends to support multiple authentication methods."}),"\n",(0,s.jsxs)(n.li,{children:["Refer to the ",(0,s.jsx)(n.a,{href:"./api-reference",children:"API Reference"})," for detailed method documentation."]}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);